/*2.2.1.	Truy vấn đơn giản
1.	Truy vấn tất cả dữ liệu có trong table.*/
SELECT *
FROM `atheletes.athletes` 

--2.	Cho biết thông tin về name, nationality, date_of_birth, height, weight, total, sport của các VDV (VDV) nữ.
SELECT name, nationality, date_of_birth, height, weight, total, sport
FROM `atheletes.athletes` 
WHERE sex = 'female'

/*3.	Cho biết name, date_of_birth của tất cả VDV, nhưng sắp xếp kết quả theo date_of_birth và những hàng có giá trị NULL sẽ được đưa lên đầu của kết quả truy vấn.*/
SELECT name, date_of_birth
FROM `atheletes.athletes` 
ORDER BY 2 

--4.	Tương tự câu trên (vẫn sắp xếp kết quả theo date_of_birth) nhưng cho những hàng có giá trị NULL chuyển xuống cuối của kết quả truy vấn.
SELECT name, date_of_birth
FROM `atheletes.athletes` 
ORDER BY 2 DESC

--5.	Xem danh sách các VDV nữ không có huy chương (total=0).
SELECT *
FROM `atheletes.athletes`
WHERE sex = 'female' AND total = 0

--6.	Cho biết tên những nước mà thông tin date_of_birth của VDV bị  thiếu (null).
SELECT NATIONALITY 
FROM `atheletes.athletes`
WHERE DATE_OF_BIRTH IS NULL

--7.	Cho biết tên những nước có vận động viên nữ tham gia môn rugby sevens (sport= rugby sevens).
SELECT NATIONALITY 
FROM `atheletes.athletes`
WHERE sex = 'female'AND sport = 'rugby sevens'

--8.	Cho biết tên những VDV chỉ đạt huy chương vàng nhưng không đạt huy chương bạc và đồng.
SELECT name
FROM `atheletes.athletes`
WHERE gold >0 AND silver = 0 AND bronze = 0

--9.	Cho biết tên những VDV nữ chỉ đạt huy chương vàng gold.
SELECT name
FROM `atheletes.athletes`
WHERE sex = 'female' AND gold > 0 AND silver = 0 AND bronze = 0

--10.	Cho biết name, nationality, sex, date_of_birth của những VDV nữ có huy chương vàng môn cycling khi có tuổi chưa đến 23. Nhắc lại dữ liệu trong table này thu thập về thành tích của VDV trong năm 2016.
SELECT name, nationality, sex, date_of_birth
FROM `atheletes.athletes`
WHERE sport = 'cycling' AND age < 23 AND sex = 'female' AND gold > 0 AND silver = 0 AND bronze = 0

--2.2.2.	SELECT * EXCEPT
--11.	Cho biết nội dung của tất cả các field, ngoại trừ field total của những VDV có bất kỳ huy chương nào khi đã trên 50 tuổi.
SELECT * EXCEPT (total)
FROM `atheletes.athletes`
--WHERE total > 0 AND age > 50
WHERE total>0 AND 2016 - EXTRACT(year FROM date_of_birth) >50

--12.	Cho biết nội dung của tất cả các field, ngoại trừ 2 field height và weight của những VDV người Marocco (MAR) bị thiếu thông tin về ngày sinh (date_of_birth=null).
SELECT * EXCEPT (height,weight)
FROM `atheletes.athletes`
WHERE nationality = 'MAR' AND date_of_birth IS NULL

--2.2.3.	SELECT * REPLACE
--13.	Giả sử số tiển thưởng cho mỗi huy chương như sau: gold=10.000, silver=5.000, bronze=3.000. Yêu cầu cho biết các thông tin trong table, trong đó thay giá trị cột total thành tổng số tiền thưởng mà VDV đó được nhận và chỉ tính cho những người có huy chương (total>0). 
SELECT *REPLACE (gold * 10000 + silver * 5000 + bronze* 3000 AS total )
FROM `atheletes.athletes`
WHERE total >0

--2.2.4.	Toán tử [NOT] LIKE - hàm Starts_with
--Mỗi câu sau đây yêu cầu HV thực hiện bằng cả 2 cách: LIKE và Starts_With (nếu được)
--14.	Cho biết tên VDV và tên nước của VDV đó sao cho 3 ký tự đầu của tên VDV là ‘Car’. Yêu cầu thực hiện bằng 2 cách: sử dụng toán tử LIKE và hàm Starts_with.
SELECT name, nationality
FROM `atheletes.athletes`
WHERE name LIKE 'Car%'

--15.	Cho biết tên VDV và tên nước của VDV đó sao cho ký tự thứ ba của tên VDV là ký tự ‘o’ và ký tự thứ năm là ‘a’.
SELECT name, nationality
FROM `atheletes.athletes`
WHERE name LIKE '__o_a%'

--16.	Tìm tên (name) những VDV có ký tự thứ 3 không phải là chữ ‘d’ và ký tự thứ 5 không phải là khoảng trắng.
SELECT name
FROM `atheletes.athletes`
WHERE name NOT LIKE '__d_ %'

--17.	Tìm tên (name) những VDV có ký tự đầu tiên là chữ ‘S’ và ký tự thứ 5 không phải là 1 trong 2 ký tự ‘m’ hoặc ‘n’.
SELECT name
FROM `atheletes.athletes`
WHERE name LIKE 'S%' AND name NOT LIKE '____m%' AND name NOT LIKE '____n%'

--2.2.5.	Toán tử [NOT] BETWEEN
--Thực hiện các yêu cầu này bằng 2 cách: có và không có sử dụng toán tử BETWEEN
--18.	 Cho biết những VDV nữ nào có chiều cao từ 1,6m đến 1.8m, trọng lượng nhẹ hơn 60 kg nhưng vẫn đạt huy chương vàng.
SELECT name
FROM `atheletes.athletes`
WHERE sex = 'female' AND weight < 60 AND gold > 0  AND height BETWEEN 1.6 AND 1.8 
--19.	Cho biết tên những VDV đạt huy chương vàng khi tuổi không nằm trong khoảng từ 18 đến 53.
SELECT name
FROM `atheletes.athletes`
WHERE gold > 0 AND age NOT BETWEEN 18 AND 53 
--2.2.6.	LIMIT
--20.	Truy vấn 1000 hàng đầu trong dữ liệu.
SELECT *
FROM `atheletes.athletes`
LIMIT 1000
--21.	Cho biết 10 VDV có nhiều huy chương nhất (tìm dựa trên field total)
SELECT *
FROM `atheletes.athletes`
ORDER BY total DESC
LIMIT 10
--22.	Cho biết 10 VDV nữ có nhiều huy chương vàng nhất.
SELECT *
FROM `atheletes.athletes`
WHERE sex = 'female'
ORDER BY gold DESC
LIMIT 10
--23.	Cho biết tên VDV nữ trẻ tuổi nhất của Việt Nam có đạt huy chương (không phân biệt gold, silver hay bronze).
SELECT *
FROM `atheletes.athletes`
WHERE sex = 'female' AND nationality = 'VIE'AND total > 0
ORDER BY age ASC
LIMIT 1
--24.	Trong số những vận động viên nữ, cho biết tên VDV của nước Mỹ có số huy chương vàng nhiều thứ 3 của nước Mỹ.
SELECT *
FROM `atheletes.athletes`
WHERE sex = 'female' AND nationality = 'USA'
ORDER BY gold DESC 
LIMIT 1 OFFSET 2

2.2.7.	Sub query
	Lần lượt thực hiện các truy vấn sau (từ câu 25 đến câu 27) bằng 2 cách:
•	Sử dụng LIMIT.
•	Sử dụng sub query.
Dựa trên kết quả truy vấn để thấy được ưu điểm của mỗi cách viết truy vấn.
--25.	Cho biết tên 1 VDV nữ đạt huy chương vàng nhưng “nhẹ cân” nhất trong những VDV nữ đạt huy chương vàng.
--limit
SELECT *
FROM `atheletes.athletes`
WHERE sex = 'female' AND gold > 0
ORDER BY weight ASC 
LIMIT 1
-- sub query
SELECT*
FROM `atheletes.athletes` x
WHERE sex = 'female' AND gold > 0
AND weight = (SELECT MIN(weight)
              FROM `atheletes.athletes`y
              WHERE x.sex = y.sex AND gold > 0)

26.	Cho biết tên của nữ VDV có cân nặng nhẹ nhất trong tất cả các VDV người Argentina (nationality=ARG) từng đạt huy chương vàng.
--limit 
SELECT *
FROM `atheletes.athletes`
WHERE sex = 'female' AND nationality = 'ARG' AND gold > 0
ORDER BY weight ASC 
LIMIT 1
-- sub query
SELECT*
FROM `atheletes.athletes` x
WHERE sex = 'female' AND nationality = 'ARG'AND gold > 0
AND weight = (SELECT MIN(weight)
              FROM `atheletes.athletes`y
              WHERE x.sex = y.sex AND x.nationality = y.nationality AND gold > 0)
27.	Cho biết tên VĐV, quốc tịch của VĐV nam có trọng lượng nhẹ nhất. 
--limit
SELECT name,nationality
FROM `atheletes.athletes`
WHERE sex = 'male'
ORDER BY weight ASC 
LIMIT 1
-- sub query
SELECT*
FROM `atheletes.athletes` x
WHERE sex = 'male' 
AND weight = (SELECT MIN(weight)
              FROM `atheletes.athletes`y
              WHERE x.sex = y.sex )
2.2.8.	Aggregate functions
28.	Cho biết số hàng dữ liệu (records) có trong table.
SELECT count(id)
FROM `atheletes.athletes` 

29.	Có bao nhiêu nước có VDV đạt huy chương đồng (bronze>0 và không quan tâm đến môn mà VDV thi đấu).
SELECT count(distinct(nationality))
FROM `atheletes.athletes`
WHERE bronze > 0

	Từ đây trở đi, trong mỗi câu của phần Agregate functions, yêu cầu học viên thực hiện bằng 2 cách:
o	Sử dụng mệnh đề GROUP BY.
o	Sử dụng mệnh đề OVER (nếu có thể vận dụng được).
30.	Giả sử số tiển thưởng cho mỗi huy chương như sau: gold=10.000, silver=5.000, bronze=3.000. Cho biết tổng số tiền thưởng mà mỗi nước sẽ nhận được. 
SELECT nationality,sum(gold*10000+silver*5000+bronze*3000) as total
FROM `atheletes.athletes` 
GROUP BY nationality
----------------------------
SELECT DISTINCT nationality, sum(gold*10000+silver*5000+bronze*3000) OVER (PARTITION BY nationality) AS Total
FROM `atheletes.athletes` 

31.	Thống kê số lượng VDV của mỗi nước tham gia gồm: mã quốc gia, số lượng nam, số lượng nữ, tổng số VDV. Kết quả được sắp xếp giảm dần theo số lượng VDV nữ, nếu số lượng này bằng nhau sẽ sắp tăng dần theo số lượng VDV nam.
SELECT nationality, countif(sex = 'female') as sl_nu, countif(sex ='male') as sl_nam,count(id) as sl_vdv
FROM `atheletes.athletes` 
GROUP BY nationality
ORDER BY sl_nu DESC, sl_nam ASC
--------------------------------------------------------------
SELECT DISTINCT nationality,
                COUNTIF(sex = 'female') OVER (PARTITION BY nationality) AS sl_nu,
                COUNTIF(sex = 'male') OVER (PARTITION BY nationality) AS sl_nam,
                COUNT(*) OVER (PARTITION BY nationality) AS sl_vdv,
FROM `atheletes.athletes` 
ORDER BY sl_nu DESC, sl_nam ASC
32.	Cho biết tên mỗi nước, tuổi nhỏ nhất, tuổi lớn nhất của những VDV nước đó?
SELECT nationality,MAX(age) AS tuoilonnhat, MIN(age) AS tuoinhonhat
FROM `atheletes.athletes` 
GROUP BY nationality
------------------------------------------------
SELECT DISTINCT nationality,MAX(age) OVER (PARTITION BY nationality) AS tuoilonnhat,MIN(age) OVER (PARTITION BY nationality) AS tuoinhonhat
FROM `atheletes.athletes` 
33.	Cho biết tên nước, số lượng nam, nữ của mỗi nước theo minh họa sau:
34.	Cho biết tên tất cả các nước và số lượng VDV nữ đạt được huy chương vàng. Các nước không có nữ đạt huy chương vàng vẫn hiện tên nước đó, nhưng lúc này số lượng sẽ là 0
SELECT nationality, countif(sex = 'female'AND gold>0) as HCV
FROM `atheletes.athletes` 
GROUP BY nationality
---------------------------------------------------
SELECT DISTINCT nationality,COUNTIF(sex = 'female'AND gold>0) OVER (PARTITION BY nationality) AS HCV
FROM `atheletes.athletes` 

35.	Cho biết tên tất cả các nước và số lượng VDV nữ đạt được huy chương vàng. Chỉ hiện tên các nước có nữ đạt huy chương vàng
SELECT nationality, COUNT(*) AS HCV
FROM `atheletes.athletes` 
WHERE sex='female' AND gold>0
GROUP BY nationality
------------------------------------------------------
SELECT DISTINCT nationality,COUNT(*) OVER (PARTITION BY nationality) AS HCV
FROM `atheletes.athletes` 
WHERE sex='female' AND gold>0
36.	Cho biết nationality, số lượng từng loại huy chương (gold, silver và bronze) của những VDV nữ (sex = ‘female’) trong môn judo (sport=judo). Sắp xếp giảm dần theo từng số lượng huy chương. Nếu số lương huy chương gold bằng nhau thì sắp xếp dựa trên silver, tương tự nếu gold và silver bằng nhau sẽ xét tiếp trên bronze.
SELECT nationality, COUNTIF(gold>0) AS HCV, COUNTIF(silver>0) AS HCB, COUNTIF(bronze>0) AS HCD
FROM `atheletes.athletes` 
WHERE sex='female' AND sport='judo'
GROUP BY nationality
ORDER BY HCV DESC, HCB DESC, HCD DESC
---------------------------------------------------------
SELECT DISTINCT nationality,
                COUNTIF(gold>0) OVER (PARTITION BY nationality) AS HCV,
                COUNTIF(silver>0) OVER (PARTITION BY nationality) AS HCB,
                COUNTIF(bronze>0) OVER (PARTITION BY nationality) AS HCD
FROM `atheletes.athletes` 
WHERE sex='female' AND sport='judo'
ORDER BY HCV DESC, HCB DESC, HCD DESC


37.	Cho biết tên 3 nước có VĐV “nặng ký” nhất (trọng lượng lớn nhất).
-- any_value
select any_value(nationality), max(weight) 
from `atheletes.athletes` 
group by nationality
order by 2 desc limit 3;

-- max_by/min_by
select max_by (nationality,weight), max(weight) 
from `atheletes.athletes` 
group by nationality
order by 2 desc
limit 3;

-- not using any_value, max_by/min_by
select nationality, max (weight)
from `atheletes.athletes` 
group by nationality 
order by 2 DESC limit 3;
	Lần lượt thực hiện các truy vấn sau sau (từ câu 37 đến câu 38) bằng 3 cách:
•	ANY_VALUE
•	MAX_BY/MIN_BY
•	Không sử dụng các hàm ANY_VALUE và MAX_BY/MIN_BY.
38.	Cho biết tên môn thể thao nào mà nước Mỹ có nhiều huy chương bạc nhất.
/*ANY_VALUE*/

SELECT ANY_VALUE(SPORT) AS SPORT_NAME, MAX (SILVER) AS MAX_SILVER
FROM `atheletes.athletes` 
WHERE NATIONALITY = 'USA'
GROUP BY SPORT
ORDER BY 2 DESC
LIMIT 1;

/*MAX_BY/MIN_BY*/

SELECT MAX_BY(SPORT,SILVER) AS SPORT_NAME, MAX(SILVER) AS MAX_SILVER
FROM `atheletes.athletes` 
WHERE NATIONALITY = 'USA'
GROUP BY SPORT
ORDER BY 2 DESC
LIMIT 1;

/*Không sử dụng các hàm ANY_VALUE và MAX_BY/MIN_BY*/

SELECT SPORT, MAX(SILVER) AS MAX_SILVER
FROM `atheletes.athletes` 
WHERE NATIONALITY = 'USA'
GROUP BY SPORT
ORDER BY 2 DESC
LIMIT 1;
39.	Cho biết tên nước có VĐV “lớn tuổi” và “nhỏ tuổi” nhất. Kết quả truy vấn:
Học viên tự đưa ra nhận xét về cách viết truy vấn cùng kết quả của truy vấn.
/*ANY_VALUE*/

SELECT ANY_VALUE(NATIONALITY) AS COUNTRY, MAX(AGE) AS MAX_AGE, MIN(AGE) AS MIN_AGE
FROM `atheletes.athletes` 
GROUP BY NATIONALITY
ORDER BY 2 DESC, 3 ASC
LIMIT 1;

/*MAX_BY/MIN_BY*/

SELECT MAX_BY(NATIONALITY,AGE) AS COUNTRY, MAX(AGE) AS MAX_AGE, MIN (AGE) AS MIN_AGE
FROM `atheletes.athletes` 
GROUP BY NATIONALITY
ORDER BY 2 DESC, 3 ASC
LIMIT 1;

/*Không sử dụng các hàm ANY_VALUE và MAX_BY/MIN_BY*/

SELECT NATIONALITY, MAX(AGE) AS MAX_AGE, MIN (AGE) AS MIN_AGE
FROM `atheletes.athletes` 
GROUP BY NATIONALITY
ORDER BY 2 DESC, 3 ASC
LIMIT 1;
40.	Lần lượt thực hiện các thống kê sau:
a.-	Thống kê tên các quốc gia, tuổi giảm dần của các VDV.
SELECT nationality,age
FROM `atheletes.athletes` 
ORDER BY 2 DESC
b.-	Dựa vào câu truy vấn a, hiệu chỉnh lại để lấy ra 5 nước (không trùng nhau) có VDV lớn tuổi nhất.
/*ANY_VALUE*/

SELECT DISTINCT ANY_VALUE(NATIONALITY) AS COUNTRY, MAX(AGE) AS MAX_AGE
FROM `atheletes.athletes` 
GROUP BY NATIONALITY
ORDER BY 2 DESC
LIMIT 5;

/*MAX_BY/MIN_BY*/

SELECT DISTINCT MAX_BY(NATIONALITY,AGE) AS COUNTRY, MAX(AGE) AS MAX_AGE
FROM `atheletes.athletes` 
GROUP BY NATIONALITY
ORDER BY 2 DESC
LIMIT 5;

/*Không sử dụng các hàm ANY_VALUE và MAX_BY/MIN_BY*/

SELECT DISTINCT NATIONALITY, MAX(AGE) AS MAX_AGE
FROM `atheletes.athletes` 
GROUP BY NATIONALITY
ORDER BY 2 DESC
LIMIT 5;
c.-	Kết quả thực hiện tương tự như kết quả của câu b, nhưng yêu cầu thực hiện bằng cách sử dụng hàm ARRAY_AGG.
d.-	Kết quả thực hiện tương tự như kết quả của câu b và c, nhưng yêu cầu thực hiện bằng cách sử dụng hàm ARRAY.
41.	Tạo thống kê số lượng VDV theo từng chiều cao (height)
select ROUND(Height,1) as HeightofAthletes,count(*) as Quantity
from `atheletes.athletes`
group by 1
order by 1
42.	Chỉ số BMI (Body Mass Index - chỉ số khối cơ thể) giúp mọi người tự kiểm tra sức khỏe dựa trên công thức: 
BMI: cân nặng (kg) / (chiều cao (m) * chiều cao (m))
Tra chỉ số BMI vừa có trong bảng sau người ta biết được mức độ béo phì.
Yêu cầu: xác định số lượng VDV của từng mức đánh giá, nhưng chỉ tính cho những VDV môn cử tạ (sport= weightlifting). Kết quả truy vấn có dạng
select countif((weight/(height*height))<18.5) as Underweight,
countif((weight/(height*height)) between 18.5 and 22.99) as Normal,
countif((weight/(height*height)) between 23 and 24.99) as Overweight,
countif((weight/(height*height)) >=25) as Obese
from `atheletes.athletes`
where sport = 'weightlifting'

2.2.9.	Conditional expressions
Yêu cầu: sử dụng tất cả các biểu thức điều kiện (CASE, IF, …) mà học viên biết để xử lý cho các câu sau đây:
43.	Cho biết VDV với name= Kelsi Worrell có đạt huy chương vàng môn aquatics (sport= aquatics) hay không? Trả lời ‘Có’ hoặc ‘không’.
SELECT IF(COUNT(*)>=1,'Co','Khong') AS TRALOI
FROM`atheletes.athletes`
WHERE name= 'Kelsi Worrell' AND gold>0 AND sport= 'aquatics'
----------------------------------------------------------
SELECT CASE WHEN COUNT(*)>=1 THEN 'Co' ELSE 'Khong' END AS TRALOI
FROM`atheletes.athletes`
WHERE name= 'Kelsi Worrell' AND gold>0 AND sport= 'aquatics'
44.	Cho biết VĐV ‘Hoang Xuan Vinh’ của Việt Nam có đạt được huy hương vàng môn bắn súng (shooting) hay không? Trả lời ‘Có’ hoặc ‘không’.
SELECT IF(COUNT(*)>=1,'Co','Khong') AS TRALOI
FROM`atheletes.athletes`
WHERE name= 'Hoang Xuan Vinh' AND gold>0 AND sport= 'shooting'
----------------------------------------------------------
SELECT CASE WHEN COUNT(*)>=1 THEN 'Co' ELSE 'Khong' END AS TRALOI
FROM`atheletes.athletes`
WHERE name= 'Hoang Xuan Vinh' AND gold>0 AND sport= 'shooting'
45.	Cho biết tỷ lệ VDV nữ có giải / số lượng VDV nam có giải của Việt Nam (VIE) có lớn hơn 40% hay không? Trả lời ‘Có’ hoặc ‘không’. 
Lưu ý: cần kiểm tra trước xem số lượng VDV nam có giải của Việt Nam có >0 hay không trước khi tính toán tỷ lệ, vì nếu số lượng này =0 sẽ dẫn đến phép chia có mẫu số =0 sẽ gây lỗi.
SELECT SO_LUONG_NAM,SO_LUONG_NU, IF(SO_LUONG_NAM=0, 'VDV nam khong co giai',IF(SO_LUONG_NU/SO_LUONG_NAM > 0.4, "Có", "Không" )) AS TRALOI
FROM (SELECT DISTINCT NATIONALITY, 
      COUNTIF(SEX='male') OVER (PARTITION BY NATIONALITY) AS SO_LUONG_NAM, 
      COUNTIF(SEX='female') OVER (PARTITION BY NATIONALITY) AS SO_LUONG_NU, 
      COUNT(*) OVER (PARTITION BY NATIONALITY) AS TongVDV
      FROM `atheletes.athletes`
      WHERE TOTAL > 0 AND nationality='VIE')
------------------------------------------------
SELECT 
    IF (
        COUNTIF(sex='male')> 0,
        IF(COUNTif(sex='female') / COUNTif(sex='male') >= 0.4, 'co', 'khong'),
        'NA'
    ) AS TRA_LOI
FROM 
   `atheletes.athletes`
WHERE 
    total > 0 AND nationality = 'VIE'
------------------------------------------------
SELECT CASE WHEN countif(sex='male') = 0 THEN 'VDV nam khong co giai'
            WHEN (countif(sex='female')/countif(sex='male'))>=0.4 then 'co'
            ELSE 'khong' 
       END as TRA_LOI
FROM `atheletes.athletes`
WHERE total > 0 AND nationality = 'VIE'
	Lần lượt thực hiện các truy vấn sau sau (từ câu 46 đến câu 48) bằng 3 cách
•	SUM
•	COUNT
•	COUNTIF
 
46.	Cho biết tên nước, số lượng nam, số lượng nữ theo hình minh họa sau:
nationality	soluongnu	soluongnam
ZIM	26	9
ZAM	2	5
YEM	1	2
VIN	2	2
VIE	13	10
…	…	…
--SUM
SELECT nationality, SUM(IF(sex='female',1,0)) AS soluongnu,SUM(IF(sex='male',1,0)) AS soluongnam 
FROM `atheletes.athletes` 
GROUP BY nationality
ORDER BY nationality DESC
--COUNT
SELECT nationality, COUNT(IF(sex='female',1,NULL)) AS soluongnu,COUNT(IF(sex='male',1,NULL)) AS soluongnam 
FROM `atheletes.athletes` 
GROUP BY nationality
ORDER BY nationality DESC
--COUNTIF
SELECT nationality,COUNTIF(sex='female') AS soluongnu, COUNTIF(sex='male') AS soluongnam
FROM `atheletes.athletes` 
GROUP BY nationality
ORDER BY nationality DESC
47.	Cho biết số lượng VDV tham gia theo từng nhóm tuổi: dưới 14, từ 15-16, từ 17-18, từ 19-22 và trên 22 của mỗi nước. Thông tin gồm nationality, LessThan14, From15To16, From17To18, From19To22, OlderThan22. Gợi ý: dựa trên năm sinh và năm tham gia (2016).
--SUM
SELECT nationality, SUM(IF(2016-EXTRACT(YEAR FROM date_of_birth)<14,1,0)) AS LessThan14,
                    SUM(IF(2016-EXTRACT(YEAR FROM date_of_birth)BETWEEN 15 AND 16,1,0)) AS From15To16,
                    SUM(IF(2016-EXTRACT(YEAR FROM date_of_birth)BETWEEN 17 AND 18,1,0)) AS From17To18,
                    SUM(IF(2016-EXTRACT(YEAR FROM date_of_birth)BETWEEN 19 AND 22,1,0)) AS From19To22,
                    SUM(IF(2016-EXTRACT(YEAR FROM date_of_birth)>22,1,0)) AS OlderThan22
FROM `atheletes.athletes` 
GROUP BY nationality
--COUNT
SELECT nationality, COUNT(IF(2016-EXTRACT(YEAR FROM date_of_birth)<14,1,NULL)) AS LessThan14,
                    COUNT(IF(2016-EXTRACT(YEAR FROM date_of_birth)BETWEEN 15 AND 16,1,NULL)) AS From15To16,
                    COUNT(IF(2016-EXTRACT(YEAR FROM date_of_birth)BETWEEN 17 AND 18,1,NULL)) AS From17To18,
                    COUNT(IF(2016-EXTRACT(YEAR FROM date_of_birth)BETWEEN 19 AND 22,1,NULL)) AS From19To22,
                    COUNT(IF(2016-EXTRACT(YEAR FROM date_of_birth)>22,1,NULL)) AS OlderThan22
FROM `atheletes.athletes` 
GROUP BY nationality
--COUNTIF
SELECT nationality, COUNTIF(2016-EXTRACT(YEAR FROM date_of_birth)<14) AS LessThan14,
                    COUNTIF(2016-EXTRACT(YEAR FROM date_of_birth) BETWEEN 15 AND 16) AS From15To16,
                    COUNTIF(2016-EXTRACT(YEAR FROM date_of_birth) BETWEEN 17 AND 18) AS From17To18,
                    COUNTIF(2016-EXTRACT(YEAR FROM date_of_birth) BETWEEN 19 AND 22) AS From19To22,
                    COUNTIF(2016-EXTRACT(YEAR FROM date_of_birth) >22) AS OlderThan22
FROM `atheletes.athletes` 
GROUP BY nationality
48.	Thực hiện thống kê gồm tên nước, số lượng VDV nữ đạt huy chương vàng của nước đó, tương tự cho huy chương bạc và đồng. Kết quả sắp xếp giảm dần theo số lượng VDV đạt huy chương vàng. 
nationality	FemaleWithGold	FemaleWithSilver	FemaleWithBronze
USA	74	26	35
RUS	38	17	22
GER	29	14	23
CHN	28	21	22
GBR	27	18	15
--SUM
SELECT nationality, SUM(IF(sex='female' AND gold>0,1,0)) AS SL_VDV_NU_HCV,
                    SUM(IF(sex='female' AND silver>0,1,0)) AS SL_VDV_NU_HCB,
                    SUM(IF(sex='female' AND bronze>0,1,0)) AS SL_VDV_NU_HCD
FROM `atheletes.athletes` 
GROUP BY nationality
ORDER BY SL_VDV_NU_HCV DESC
--COUNT
SELECT nationality, COUNT(IF(sex='female' AND gold>0,1,NULL)) AS SL_VDV_NU_HCV,
                    COUNT(IF(sex='female' AND silver>0,1,NULL)) AS SL_VDV_NU_HCB,
                    COUNT(IF(sex='female' AND bronze>0,1,NULL)) AS SL_VDV_NU_HCD
FROM `atheletes.athletes` 
GROUP BY nationality
ORDER BY SL_VDV_NU_HCV DESC
--COUNTIF
SELECT nationality, COUNTIF(sex='female' AND gold>0) AS SL_VDV_NU_HCV,
                    COUNTIF(sex='female' AND silver>0) AS SL_VDV_NU_HCB,
                    COUNTIF(sex='female' AND bronze>0) AS SL_VDV_NU_HCD
FROM `atheletes.athletes` 
GROUP BY nationality
ORDER BY SL_VDV_NU_HCV DESC
2.2.10.	Subquery
49.	Có bao nhiêu nước trong danh sách. Yêu cầu viết bằng 2 cách: có và không có sử dụng subquery
--KO SUBQUERY
SELECT COUNT(DISTINCT nationality) AS TRALOI
FROM `atheletes.athletes`
--SUBQUERY
SELECT COUNT(*) AS TRALOI
FROM (SELECT nationality
      FROM `atheletes.athletes`
      GROUP BY nationality )
50.	Cho biết tên và số lượng huy chương vàng của những VDV mà những VDV này có số huy chương vàng nhiều hơn VDV có tên là ‘Usain Bolt’.
--KO SUBQUERY
SELECT name,gold
FROM `atheletes.athletes`
WHERE (name NOT LIKE 'Usain Bolt')> (name LIKE 'Usain Bolt')
--SUBQUERY
SELECT name, gold
FROM `atheletes.athletes`
WHERE gold > (SELECT GOLD
              FROM `atheletes.athletes`
              WHERE NAME='Usain Bolt')
GROUP BY name,gold
51.	Cho biết tên và chiều cao của 4 VDV có chiều cao là cao nhất trong tất cả các VDV. Nếu có nhiều VDV cùng có chiều cao như VDV thứ 4 thì lấy tất cả những người này (khi đó danh sách kết quả có thể có nhiều hơn 4 VDV).
--SUBQUERY
SELECT name, height
FROM `atheletes.athletes`
WHERE height >=
      (SELECT height
      FROM `atheletes.athletes`
      ORDER BY height DESC
      LIMIT 1 OFFSET 3)
ORDER BY height DESC
52.	Cho biết tên nước, số lượng huy chương đồng mà nước đó đạt được giống như số lượng huy chương đồng mà nước Hàn Quốc (KOR) đã đạt. Yêu cầu kết quả không có tên nước Hàn Quốc
SELECT nationality, SUM(bronze) AS total_bronze
FROM  `atheletes.athletes`
WHERE nationality != 'KOR'
GROUP BY nationality
HAVING  total_bronze = (SELECT SUM(bronze)
                                            FROM `atheletes.athletes`
                                            WHERE nationality = 'KOR')

2.2.11.	Lớn/nhỏ nhất
	Lần lượt thực hiện các truy vấn trong phần này bằng 2 cách:
•	Sử dụng LIMIT.
•	Sử dụng sub query.
Dựa trên kết quả truy vấn để thấy được ưu điểm của mỗi cách viết truy vấn.
53.	Cho biết tên những nước có vận động nhỏ tuổi nhất trong tất cả các VDV tham gia.
--LIMIT
SELECT nationality,age
FROM  `atheletes.athletes`
GROUP BY nationality,age
ORDER BY 2 
LIMIT 1
--SUBQUERY
SELECT nationality,age
FROM  `atheletes.athletes` 
WHERE age=( SELECT MIN(age)
            FROM  `atheletes.athletes`)
54.	a)Cho biết tên những VDV nước Mỹ có chiều cao là cao nhất trong số tất cả các VDV tham dự của các nước
name	nationality	height
Kevin Cordes	USA	2.21
/*54A.	Cho biết tên những VDV nước Mỹ có chiều cao là cao nhất trong số tất cả các VDV tham dự (cua tat ca cac nuoc)  
name	nationality	height
Kevin Cordes	USA	2.21*/
---subquery
select name, nationality, height
from `athletes.athletes`
where Y.nationality ='USA' 
 AND height >= ( select max(height)
              from `athletes.athletes` )
----limit
select name, nationality, height
from `athletes.athletes` X
where Y.nationality ='USA' AND height >= ( select max(height)
                                          from `athletes.athletes` )
order by 3 desc
limit 1
/*54B.	Cho biết tên những VDV nước Mỹ có chiều cao là cao nhất trong số tất cả các VDV tham dự cua nuoc nay
---subquery*/
select name, nationality, height
from `athletes.athletes` X
where height = ( select max(height)
                  from `athletes.athletes` Y
                  where X.nationality=Y.nationality and Y.nationality ='USA')

----limit
select name, nationality, height
from `athletes.athletes` X
where Y.nationality ='USA' AND height >= ( select max(height)
                                          from `athletes.athletes` Y
                                          WHERE X.nationality = Y.nationality)
order by 3 desc
limit 1
55.	Cho biết tên những VDV có chiều cao thấp nhất trong số những VDV đạt huy chương. Minh họa kết quả cần thực hiện:
name	nationality	height	total
Yan Wang	CHN	1.4	1
--LIMIT
SELECT name,nationality,height,total
FROM  `atheletes.athletes` 
WHERE totaL>0
ORDER BY 3 ASC
LIMIT 1
--SUBQUERY
SELECT name,nationality,height,total
FROM  `atheletes.athletes` 
WHERE totaL>0 AND height=(SELECT MIN(height)
                            FROM  `atheletes.athletes` 
                            WHERE total>0)
56.	Cho biết tên những nước và số lượng VDV nữ của nước đó đạt được huy chương vàng nhiều nhất so với các nước khác.
--LIMIT
SELECT nationality, countif(gold>0 and sex='female') as total_gold
FROM `atheletes.athletes`
group by nationality
order by 2 desc
limit 1
--SUBQUERY
SELECT nationality,COUNT(*) AS SL_VDV_NU
FROM  `atheletes.athletes` 
WHERE sex='female'AND gold>0
GROUP BY nationality
HAVING COUNT(*)=(SELECT COUNT(*)
                    FROM  `atheletes.athletes` 
                    WHERE sex='female'AND gold>0
                    GROUP BY nationality
                    ORDER BY 1 DESC LIMIT 1)

57.	Cho biết tên VDV có chiều cao thấp hơn chiều cao trung bình của tất cả VDV nước Mỹ.
57.	Cho biết tên VDV có chiều cao thấp hơn chiều cao trung bình của tất cả VDV nước Mỹ.

---subquery
select name, nationality, height
from `atheletes.athletes`  X
where height < ( 
              select avg(height)
              from `atheletes.athletes` Y
              where Y.nationality ='USA')
order by 3 desc

----limit
select name, nationality, height
from `atheletes.athletes`  X
where height < ( select avg(height)
                from `atheletes.athletes`  Y
                where Y.nationality ='USA')
order by 3 desc 
limit 1

58.	Cho biết tên VDV Việt nam có chiều cao cao hơn chiều cao trung bình của tất cả VDV nước Mỹ.

---subquery
select name, nationality, height
from `atheletes.athletes`  X
where nationality='VIE' and height > ( 
              select avg(height)
              from `atheletes.athletes`  Y
              where Y.nationality ='USA')
order by 3 desc

----limit
select name, nationality, height
from `atheletes.athletes`  X
where nationality='VIE' and height > ( select avg(height)
                from `atheletes.athletes`  Y
                where Y.nationality ='USA')
order by 3 desc 
limit 1
59.	Cho biết tên nước có nhiều huy chương vàng nhất.
--SUBQUERY
SELECT nationality,SUM(gold) AS HCV
FROM `atheletes.athletes` 
GROUP BY nationality
HAVING SUM(gold)=(SELECT SUM(gold)
                    FROM `atheletes.athletes` 
                    GROUP BY nationality
                    ORDER BY 1 DESC
                    LIMIT 1)
--LIMIT
SELECT nationality,SUM(gold) AS HCV
FROM `atheletes.athletes` 
GROUP BY nationality
ORDER BY 2 DESC LIMIT 1
60.	Cho biết tên những nước đạt được nhiều huy chương vàng nhất của môn golf.
---subquery

select nationality,sport , sum(gold) as HCV_golf
from `atheletes.athletes` 
where sport='golf'
group by 1,2
having sum(gold) = (
              select sum(gold)
              from `atheletes.athletes` 
              where sport='golf'
              group by nationality
              order by 1 desc limit 1)

----limit

select nationality, sport, sum(gold)
from `atheletes.athletes` 
where sport='golf'
group by 1,2
order by 3 desc 
limit 1
61.	Cho biết môn thi đấu có nhiều VDV tham gia nhất.
--SUBQUERY
SELECT sport,COUNT(*) AS TongVDV
FROM `atheletes.athletes`
GROUP BY 1
HAVING COUNT(*)=(SELECT COUNT(*)
                    FROM `atheletes.athletes`
                    GROUP BY sport
                    ORDER BY 1 DESC LIMIT 1)
--LIMIT
SELECT sport,COUNT(*) AS TongVDV
FROM `atheletes.athletes`
GROUP BY sport
ORDER BY 2 DESC LIMIT 1
62.	Cho biết tên những nước tham gia nhiều môn thi đấu (sport) nhất.
SELECT nationality COUNT(*)
FROM `atheletes.athletes`
GROUP BY 1
61.	Cho biết môn thi đấu có nhiều VDV tham gia nhất.

---subquery

select sport ,count(*)
from `athletes.athletes`
group by 1
having count(*) = (
              select count(*)
              from `athletes.athletes`
              group by sport 
              order by 1 desc limit 1)

----limit

select sport, count(*) as Count_Sport
from `athletes.athletes`
group by 1
order by 2 desc 
limit 1


62.	Cho biết tên những nước tham gia nhiều môn thi đấu (sport) nhất.

---subquery
select nationality ,count(*) as Count_Sport
from `athletes.athletes`
group by 1
having count(*) = (
              select count(*)
              from `athletes.athletes`
              group by nationality
              order by 1 desc limit 1)

----limit
select nationality, count(*) as Count_Sport
from `athletes.athletes`
group by 1
order by 2 desc 
limit 1


63.	Cho biết tên những nước có nhiều VDV không đạt huy chương nhất (tức là những VDV này có tên trong dữ liệu nhưng không đạt được bất kỳ huy chương nào trong 3 huy chương gold, silver, bronze).

---subquery

select nationality, sum(total)
from `athletes.athletes`
group by 1
having sum(total) = (select sum(total)
                  from `athletes.athletes`
                  group by nationality
                  order by 1 limit 1
)
---limit
select nationality, sum(total)
from `athletes.athletes`
group by 1
order by 2 
limit 1

64.	Cho biết tên những nước mà tổng số huy chương vàng của họ lớn hơn tổng số huy chương bạc và đồng cộng lại.

---subquery

select nationality, sum(gold), sum(silver), sum(bronze)
from `athletes.athletes`
group by 1
having sum(gold) > (select sum(silver+bronze)
                  from `athletes.athletes`
                  group by nationality
                  order by 1 desc
                  limit 1
)

---limit
select nationality, sum(gold), sum(silver), sum(bronze)
from `athletes.athletes`
group by 1
having sum(gold)> sum(silver+bronze)
order by 1 desc
limit 1

65.	Cho biết tên nước có số lượng VDV tham gia 2 môn judo và taekwondo là nhiều nhất. 

---subquery

select nationality, count(*)
from `athletes.athletes`
where sport in ('judo','taekwondo')
group by 1
having count(*) = (select count(*)
                  from `athletes.athletes`
                  where sport in ('judo','taekwondo')
                  group by nationality
                  order by 1 desc
                  limit 1
)

--limit
select nationality, count(*)
from `athletes.athletes`
where sport in ('judo','taekwondo')
group by 1
order by 2 desc
limit 1

